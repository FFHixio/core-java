/*
 * Copyright 2019, TeamDev. All rights reserved.
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

syntax = "proto3";

package spine.system.server;

import "spine/options.proto";

option (type_url_prefix) = "type.spine.io";
option (internal_all) = true;

option java_package = "io.spine.system.server";
option java_outer_classname = "EnrichmentsProto";
option java_multiple_files = true;

import "spine/core/command.proto";

// The enrichment for system events.
//
// Enriches the `CommandScheduled` event with an instance of `Command`.
//
message CommandEnrichment {
    option (enrichment_for) = "spine.system.server.CommandScheduled";

    // `Command` which enriches the `CommandScheduled` event.
    //
    // The purpose of using an enrichment in the `CommandScheduled` event is to avoid storing
    // an instance of `Command` in the event stream multiple times.
    //
    spine.core.Command command = 1 [(by) = "*.id"];
}
