/*
 * Copyright 2018, TeamDev. All rights reserved.
 *
 * Redistribution and use in source and/or binary forms, with or without
 * modification, must retain the above copyright notice and the following
 * disclaimer.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

dependencies {
    compile project(path: ':client')

    implementation deps.grpc.grpcNetty
    implementation deps.grpc.grpcProtobuf

    testImplementation "org.junit.jupiter:junit-jupiter-params:$deps.versions.junit5"

    testImplementation "io.spine:spine-testlib:$spineBaseVersion"
    testImplementation project(path: ":core", configuration: 'testArtifacts')
    testImplementation project(path: ":client", configuration: 'testArtifacts')
    testImplementation project(path: ":testutil-server")
}

apply from: testArtifactsScript

// Copies the documentation files to the Javadoc output folder.
// Inspired by https://discuss.gradle.org/t/do-doc-files-work-with-gradle-javadoc/4673
javadoc {
    doLast {
        copy {
            from "src/main/docs"
            into "$buildDir/docs/javadoc"
        }
    }
}

//TODO:2018-12-07:alexander.yevsyukov: Remove this task and dependency on it after Spine Proto Compiler
// no longer generates interfaces mentioned in the (is) option of a proto message. Now this happens
// always, so it's no possible to create an interface in the same package with the generated 
// message, and then mentioned in the `is` option value.
// That's why this task removes the automatically generated interface in favor of the manually
// written class.
task deleteGeneratedWithLifecycleJava(type: Delete) {
    delete "${project.ext.generatedJavaDir}/io/spine/server/entity/WithLifecycle.java"
}

compileJava {
    dependsOn deleteGeneratedWithLifecycleJava
}
